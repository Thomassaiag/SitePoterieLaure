name: Site Web Laure CI/CD pipeline

on:
  push:
    branches:[main]
  pull_request:
    branches:[main]
  workflow_dispatch:


env:
  POSTGRES_DB: ${DBNAME}
  POSTGRES_USER: ${DBUSER}
  POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
  NODE_ENV: test

jobs:

  #tests

  build:
    #needs: tests

    runs-on: ubuntu-latest
    if: github.ref=='refs/heads/main' || startsWith (github/ref, 'refs/tags/v')

    steps:
      -uses: actions/checkout@v3

      #login to docker hub
      -name: sitepoterielaure
      uses: docker/login-action@v2
      with:
        username: ${{secrets.DOCKERHUB_USERNAME}}
        password: ${{secrets.DOCKERHUB_TOKEN}}


      #build and push server image
      -name: Build and push server image
      uses: docker/build-push-action@v4
      with: 
        context: ./server
        push: true
        tags: thomassaiag/siteweblaure-server:latest


      -name: Build and push client image
      uses: docker/build-push-action@v4
      with:
      context: ./client
      push: true
      tags: thomassaiag/sitweblaure-client:latest


  deploy:
    needs: build
    runs-on: ubuntu-latest

    if: github.ref=='refs/heads/main'

    steps:
    -name: deploy to production server
    uses: appleboy/ssh-action@master
    with:
      host: ${{secrets.PROD_HOST}}
      username: ${{secrets.PROD_USERNAME}}
      key: ${{secrets.SSH_PRIVATE_KEY}}
      script: |
        cd/ThomasS/SitePoterie/
        docker-compose -f docker-compose.prod.yml pull
        docker-compose -f docker-compose.prod.yml up -d --force-recreate



